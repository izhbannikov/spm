}
}
}
#data <- data[2:dim(data)[1],]
data
}
# Mortality:
#mumu <- mu0 + f^2*Q
#bbb <- -2*f*Q
# Dynamics:
#u <- -a*f1
#R <- 1+a
#simdata2_ND(N=50,k=3)
simdata(u=ans$u, R=ans$R, b=ans$eps, mumu=ans$mu0, bbb=ans$b, Q=ans$Q)
# ND simulation function:
simdata <- function(N=100, # Number of individuals
u,
R,
b,
mumu,
bbb,
Q,
theta,
tstart=45,
ystart=c(85.63412671,81.74419604,223.4612069, 26.0134818, 50.57496147),
dt=1,
nj=85,
tmax=105,
k=5) {
u<-matrix(u,nrow=k,ncol=1,byrow=T)
b<-matrix(b,nrow=k,ncol=1,byrow=T)
bbb<-matrix(bbb,nrow=k,ncol=1,byrow=T)
ystart<-matrix(ystart,nrow=k,ncol=1,byrow=T)
data_names <- c()
for(n in 1:k) {
data_names <- c(data_names, paste("par1_",n, sep=''), paste("par2_",n, sep=''))
}
data <- matrix(nrow=0, ncol=(4+length(data_names)))
colnames(data) <- c("id", "xi", "t1", "t2", data_names)
mu <- function(t,y) {
mu <- ( mumu + t(y) %*% bbb +t(y) %*% Q %*% y )*exp(theta*t)
mu
}
id <- 0
for(i in 1:N) {
t1 <- tstart
t2 <- t1 + dt
y1 <- ystart
new_person <- F
id <- id + 1
j <- 1
while(new_person == F) {
S <- exp(-1*mu(t1,y1))
if(S > runif(1,0,1)) {
xi <- 0
eps <- matrix(nrow=k,ncol=1,0)
for(ii in 1:k) {
eps[ii,1] <- rnorm(n=1,mean=0,sd=b[ii,1])
}
y2 <- u + R %*% y1 + eps
new_person <- F
} else {
xi <- 1
y2 <- matrix(nrow=k,ncol=1,NA)
new_person <- T
}
dd <- c(y1[1,1], y2[1,1])
if(k>1) {
for(ii in 2:k) {
dd <- c(dd, y1[ii,1], y2[ii,1])
}
}
data <- rbind(data, c(id, xi, t1, t2, dd))
if (new_person == F) {
t1 <- t2
t2 <- t1 + dt
if(t2 > tmax+1) break;
y1 <- y2
if(j == nj) {
new_person <- T
}
j <- j+1
}
}
}
data
}
# Mortality:
#mumu <- mu0 + f^2*Q
#bbb <- -2*f*Q
# Dynamics:
#u <- -a*f1
#R <- 1+a
#simdata2_ND(N=50,k=3)
simdata(u=ans$u, R=ans$R, b=ans$eps, mumu=ans$mu0, bbb=ans$b, Q=ans$Q, theta=ans$theta)
simd <- simdata(u=ans$u, R=ans$R, b=ans$eps, mumu=ans$mu0, bbb=ans$b, Q=ans$Q, theta=ans$theta)
head(sim)
head(simd)
# ND simulation function:
simdata <- function(N=100, # Number of individuals
u,
R,
b,
mumu,
bbb,
Q,
theta,
tstart=45,
ystart=c(85.63412671,81.74419604,223.4612069, 26.0134818, 50.57496147),
dt=1,
nj=85,
tmax=105,
k=5) {
u<-matrix(u,nrow=k,ncol=1,byrow=T)
b<-matrix(b,nrow=k,ncol=1,byrow=T)
bbb<-matrix(bbb,nrow=k,ncol=1,byrow=T)
ystart<-matrix(ystart,nrow=k,ncol=1,byrow=T)
data_names <- c()
for(n in 1:k) {
data_names <- c(data_names, paste("par",n, "_1", sep=''), paste("par",n, "_2", sep=''))
}
data <- matrix(nrow=0, ncol=(4+length(data_names)))
colnames(data) <- c("id", "xi", "t1", "t2", data_names)
mu <- function(t,y) {
mu <- ( mumu + t(y) %*% bbb +t(y) %*% Q %*% y )*exp(theta*t)
mu
}
id <- 0
for(i in 1:N) {
t1 <- tstart
t2 <- t1 + dt
y1 <- ystart
new_person <- F
id <- id + 1
j <- 1
while(new_person == F) {
S <- exp(-1*mu(t1,y1))
if(S > runif(1,0,1)) {
xi <- 0
eps <- matrix(nrow=k,ncol=1,0)
for(ii in 1:k) {
eps[ii,1] <- rnorm(n=1,mean=0,sd=b[ii,1])
}
y2 <- u + R %*% y1 + eps
new_person <- F
} else {
xi <- 1
y2 <- matrix(nrow=k,ncol=1,NA)
new_person <- T
}
dd <- c(y1[1,1], y2[1,1])
if(k>1) {
for(ii in 2:k) {
dd <- c(dd, y1[ii,1], y2[ii,1])
}
}
data <- rbind(data, c(id, xi, t1, t2, dd))
if (new_person == F) {
t1 <- t2
t2 <- t1 + dt
if(t2 > tmax+1) break;
y1 <- y2
if(j == nj) {
new_person <- T
}
j <- j+1
}
}
}
data
}
# Mortality:
#mumu <- mu0 + f^2*Q
#bbb <- -2*f*Q
# Dynamics:
#u <- -a*f1
#R <- 1+a
#simdata2_ND(N=50,k=3)
simd <- simdata(u=ans$u, R=ans$R, b=ans$eps, mumu=ans$mu0, bbb=ans$b, Q=ans$Q, theta=ans$theta)
head(simd)
ystart <- c(mean(averages[,1], na.rm=T),mean(averages[,2],na.rm=T),mean(averages[,3],na.rm=T), mean(averages[,4],na.rm=T), mean(averages[,5],na.rm=T))
simd <- simdata(u=ans$u, R=ans$R, b=ans$eps, mumu=ans$mu0, bbb=ans$b, Q=ans$Q, theta=ans$theta, ystart=ystart)
head(simd)
simd <- simdata(u=ans$u, R=ans$R, b=ans$eps, mumu=ans$mu0, bbb=ans$b, Q=ans$Q, theta=ans$theta, ystart=ystart, tstart=mean(starttime))
head(simd)
# ND simulation function:
simdata <- function(N=100, # Number of individuals
u,
R,
epsilon,
mumu,
bbb,
Q,
theta,
tstart=45,
ystart,
dt=1,
nj=85,
tmax=105,
k=5) {
u<-matrix(u,nrow=k,ncol=1,byrow=T)
epsilon<-matrix(epsilon,nrow=k,ncol=1,byrow=T)
bbb<-matrix(bbb,nrow=k,ncol=1,byrow=T)
ystart<-matrix(ystart,nrow=k,ncol=1,byrow=T)
data_names <- c()
for(n in 1:k) {
data_names <- c(data_names, paste("par",n, "_1", sep=''), paste("par",n, "_2", sep=''))
}
data <- matrix(nrow=0, ncol=(4+length(data_names)))
colnames(data) <- c("id", "xi", "t1", "t2", data_names)
mu <- function(t,y) {
mu <- ( mumu + t(y) %*% bbb +t(y) %*% Q %*% y )*exp(theta*t)
mu
}
id <- 0
for(i in 1:N) {
t1 <- tstart
t2 <- t1 + dt
y1 <- ystart
new_person <- F
id <- id + 1
j <- 1
while(new_person == F) {
S <- exp(-1*mu(t1,y1))
if(S > runif(1,0,1)) {
xi <- 0
eps <- matrix(nrow=k,ncol=1,0)
for(ii in 1:k) {
eps[ii,1] <- rnorm(n=1,mean=0,sd=epsilon[ii,1])
}
y2 <- u + R %*% y1 + eps
new_person <- F
} else {
xi <- 1
y2 <- matrix(nrow=k,ncol=1,NA)
new_person <- T
}
dd <- c(y1[1,1], y2[1,1])
if(k>1) {
for(ii in 2:k) {
dd <- c(dd, y1[ii,1], y2[ii,1])
}
}
data <- rbind(data, c(id, xi, t1, t2, dd))
if (new_person == F) {
t1 <- t2
t2 <- t1 + dt
if(t2 > tmax+1) break;
y1 <- y2
if(j == nj) {
new_person <- T
}
j <- j+1
}
}
}
data
}
# Mortality:
#mumu <- mu0 + f^2*Q
#bbb <- -2*f*Q
# Dynamics:
#u <- -a*f1
#R <- 1+a
simd <- simdata(u=ans$u, R=ans$R, epsilon=ans$eps, mumu=ans$mu0, bbb=ans$b, Q=ans$Q, theta=ans$theta, ystart=ystart, tstart=mean(starttime))
head(simd)
# ND simulation function:
simdata <- function(N=100, # Number of individuals
u,
R,
epsilon,
mumu,
b,
Q,
theta,
tstart=45,
ystart,
dt=1,
nj=85,
tmax=105,
k=5) {
u<-matrix(u,nrow=k,ncol=1,byrow=T)
epsilon<-matrix(epsilon,nrow=k,ncol=1,byrow=T)
b<-matrix(b,nrow=k,ncol=1,byrow=T)
ystart<-matrix(ystart,nrow=k,ncol=1,byrow=T)
data_names <- c()
for(n in 1:k) {
data_names <- c(data_names, paste("par",n, "_1", sep=''), paste("par",n, "_2", sep=''))
}
data <- matrix(nrow=0, ncol=(4+length(data_names)))
colnames(data) <- c("id", "xi", "t1", "t2", data_names)
mu <- function(t,y) {
mu <- ( mumu + t(y) %*% b +t(y) %*% Q %*% y )*exp(theta*t)
mu
}
id <- 0
for(i in 1:N) {
t1 <- tstart
t2 <- t1 + dt
y1 <- ystart
new_person <- F
id <- id + 1
j <- 1
while(new_person == F) {
S <- exp(-1*mu(t1,y1))
if(S > runif(1,0,1)) {
xi <- 0
eps <- matrix(nrow=k,ncol=1,0)
for(ii in 1:k) {
eps[ii,1] <- rnorm(n=1,mean=0,sd=epsilon[ii,1])
}
y2 <- u + R %*% y1 + eps
new_person <- F
} else {
xi <- 1
y2 <- matrix(nrow=k,ncol=1,NA)
new_person <- T
}
dd <- c(y1[1,1], y2[1,1])
if(k>1) {
for(ii in 2:k) {
dd <- c(dd, y1[ii,1], y2[ii,1])
}
}
data <- rbind(data, c(id, xi, t1, t2, dd))
if (new_person == F) {
t1 <- t2
t2 <- t1 + dt
if(t2 > tmax+1) break;
y1 <- y2
if(j == nj) {
new_person <- T
}
j <- j+1
}
}
}
data
}
# Mortality:
#mumu <- mu0 + f^2*Q
#bbb <- -2*f*Q
# Dynamics:
#u <- -a*f1
#R <- 1+a
simd <- simdata(u=ans$u, R=ans$R, epsilon=ans$eps, mumu=ans$mu0, b=ans$b, Q=ans$Q, theta=ans$theta, ystart=ystart, tstart=mean(starttime))
head(simd)
# ND simulation function:
simdata <- function(N=100, # Number of individuals
u,
R,
epsilon,
mu0,
b,
Q,
theta,
tstart=45,
ystart,
dt=1,
nj=85,
tmax=105,
k=5) {
u<-matrix(u,nrow=k,ncol=1,byrow=T)
epsilon<-matrix(epsilon,nrow=k,ncol=1,byrow=T)
b<-matrix(b,nrow=k,ncol=1,byrow=T)
ystart<-matrix(ystart,nrow=k,ncol=1,byrow=T)
data_names <- c()
for(n in 1:k) {
data_names <- c(data_names, paste("par",n, "_1", sep=''), paste("par",n, "_2", sep=''))
}
data <- matrix(nrow=0, ncol=(4+length(data_names)))
colnames(data) <- c("id", "xi", "t1", "t2", data_names)
mu <- function(t,y) {
mu <- ( mu0 + t(y) %*% b +t(y) %*% Q %*% y )*exp(theta*t)
mu
}
id <- 0
for(i in 1:N) {
t1 <- tstart
t2 <- t1 + dt
y1 <- ystart
new_person <- F
id <- id + 1
j <- 1
while(new_person == F) {
S <- exp(-1*mu(t1,y1))
if(S > runif(1,0,1)) {
xi <- 0
eps <- matrix(nrow=k,ncol=1,0)
for(ii in 1:k) {
eps[ii,1] <- rnorm(n=1,mean=0,sd=epsilon[ii,1])
}
y2 <- u + R %*% y1 + eps
new_person <- F
} else {
xi <- 1
y2 <- matrix(nrow=k,ncol=1,NA)
new_person <- T
}
dd <- c(y1[1,1], y2[1,1])
if(k>1) {
for(ii in 2:k) {
dd <- c(dd, y1[ii,1], y2[ii,1])
}
}
data <- rbind(data, c(id, xi, t1, t2, dd))
if (new_person == F) {
t1 <- t2
t2 <- t1 + dt
if(t2 > tmax+1) break;
y1 <- y2
if(j == nj) {
new_person <- T
}
j <- j+1
}
}
}
data
}
# Mortality:
#mumu <- mu0 + f^2*Q
#bbb <- -2*f*Q
# Dynamics:
#u <- -a*f1
#R <- 1+a
simd <- simdata(u=ans$u, R=ans$R, epsilon=ans$eps, mu0=ans$mu0, b=ans$b, Q=ans$Q, theta=ans$theta, ystart=ystart, tstart=mean(starttime))
head(simd)
# ND simulation function:
simdata <- function(N=100, # Number of individuals
u,
R,
epsilon,
mu0,
b,
Q,
theta,
tstart=45,
ystart,
dt=1,
nj=85,
tmax=105,
k=5) {
u<-matrix(u,nrow=k,ncol=1,byrow=T)
epsilon<-matrix(epsilon,nrow=k,ncol=1,byrow=T)
b<-matrix(b,nrow=k,ncol=1,byrow=T)
ystart<-matrix(ystart,nrow=k,ncol=1,byrow=T)
data_names <- c()
for(n in 1:k) {
data_names <- c(data_names, paste("par",n, "_1", sep=''), paste("par",n, "_2", sep=''))
}
data <- matrix(nrow=0, ncol=(4+length(data_names)))
colnames(data) <- c("id", "xi", "t1", "t2", data_names)
mu <- function(t,y) {
mu <- ( mu0 + t(y) %*% b +t(y) %*% Q %*% y )*exp(theta*t)
mu
}
id <- 0
for(i in 1:N) {
t1 <- tstart
t2 <- t1 + dt
y1 <- ystart
new_person <- F
id <- id + 1
j <- 1
while(new_person == F) {
S <- exp(-1*mu(t1,y1))
if(S > runif(1,0,1)) {
xi <- 0
eps <- matrix(nrow=k,ncol=1,0)
for(ii in 1:k) {
eps[ii,1] <- rnorm(n=1,mean=0,sd=epsilon[ii,1])
}
y2 <- u + R %*% y1 + eps
new_person <- F
} else {
xi <- 1
y2 <- matrix(nrow=k,ncol=1,NA)
new_person <- T
}
dd <- c(y1[1,1], y2[1,1])
if(k>1) {
for(ii in 2:k) {
dd <- c(dd, y1[ii,1], y2[ii,1])
}
}
data <- rbind(data, c(id, xi, t1, t2, dd))
if (new_person == F) {
t1 <- t2
t2 <- t1 + dt
if(t2 > tmax+1) {
new_person <- T
break;
}
y1 <- y2
if(j == nj) {
new_person <- T
}
j <- j+1
}
}
}
data
}
# Mortality:
#mumu <- mu0 + f^2*Q
#bbb <- -2*f*Q
# Dynamics:
#u <- -a*f1
#R <- 1+a
simd <- simdata(u=ans$u, R=ans$R, epsilon=ans$eps, mu0=ans$mu0, b=ans$b, Q=ans$Q, theta=ans$theta, ystart=ystart, tstart=mean(starttime))
head(simd)
