% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/prepare_data.R
\name{prepare_data}
\alias{prepare_data}
\title{Output values include:
1). Database, prepared for (slow) continuous optimization (with integral).
2). Database, prepared for (quick) discrete optimization (which is used for parameter estimations)}
\usage{
prepare_data(longdat, vitstat, interval = 1, col.status = "IsDead",
  col.id = "ID", col.age = "Age", col.age.event = "LSmort",
  covariates = c("DBP", "BMI", "DBP1", "DBP2", "Weight", "Height"),
  verbose = T)
}
\arguments{
\item{longdat}{A table with longitude records.}

\item{vitstat}{A table with vital statistics.}

\item{col.status}{A name of column containing status variable (0/1 which indicate alive/dead).}

\item{col.id}{A name of column containing patient ID.}

\item{col.age}{A name of age column.}

\item{col.age.event}{- A name of event column.}

\item{covariates}{A list of covariates.}

\item{verbose}{A verbosing output indicator, default TRUE.}
}
\value{
A list of two elements: first element contains a data table for continuous optimization and
second element contains a data table for quick discrete optimization used in estimation of starting point.
}
\description{
Output values include:
1). Database, prepared for (slow) continuous optimization (with integral).
2). Database, prepared for (quick) discrete optimization (which is used for parameter estimations)
}
\examples{
library(spm)
#Reading longitude data:
longdat <- read.csv(system.file("data","longdat.csv",package="spm"))
# Prepare data for optimization:
vitstat <- read.csv(system.file("data","vitstat.csv",package="spm"))
# Remove unneeded NAs:
longdat.nonan <- longdat[which(is.na(longdat$Age) == F),]
vitstat.nonan <- vitstat[which(is.na(vitstat$BirthCohort) == F),]
data=prepare_data(longdat=longdat.nonan, vitstat=vitstat.nonan,interval=1, col.status="IsDead", col.id="ID", col.age="Age", col.age.next="AgeNext", col.age.event="LSmort", covariates=c("DBP"), verbose=T)
# Parameters estimation:
pars=spm(data,k = 1)
pars
}

